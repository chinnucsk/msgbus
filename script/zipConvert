#!/opt/app/php/bin/php
<?php
set_time_limit(0);
ini_set('memory_limit','1024M');

$src=$argv[1];
$trg=$argv[2];
echo $src, $trg;
//$zip= zip_open($src);
//while($tmp = zip_read($zip)){
//	$json[] = array('filename' => zip_entry_name($tmp),'filesize' => zip_entry_filesize($tmp));
//}
//
//var_dump($json);
//

$zip = new ZipArchive;
$json = array();
if ($zip->open($src) === TRUE) {
	
	for($i=0; $i<$zip->numFiles; $i++){
		$tmp = $zip->statIndex($i);
		var_dump($tmp);
		if(is_utf8($tmp['name'])===true){
			$json[$i]['filename'] = addslashes($tmp['name']);
		}else{
			$json[$i]['filename'] = iconv('gbk','utf-8',addslashes($tmp['name']));
		}
		$json[$i]['filesize'] = $tmp['size'];
		$json[$i]['index'] = $i;
		$json[$i]['crc'] = $tmp['crc'];
		$json[$i]['mtime'] = date('Y-m-d H:i:s', $tmp['mtime']);
		$json[$i]['filetype'] = empty($tmp['comp_method'])?'directory':'file';
		unset($tmp);
	}
	$zip->close();
} else {
	echo 'failed';
}

$json = array_reverse($json);
//$json = format($json);
print_r($json);
file_put_contents($trg, json_encode($json));



// Returns true if $string is valid UTF-8 and false otherwise.
function is_utf8($word)
{
	if (preg_match("/^([".chr(228)."-".chr(233)."]{1}[".chr(128)."-".chr(191)."]{1}[".chr(128)."-".chr(191)."]{1}){1}/",$word) == true || preg_match("/([".chr(228)."-".chr(233)."]{1}[".chr(128)."-".chr(191)."]{1}[".chr(128)."-".chr(191)."]{1}){1}$/",$word) == true || preg_match("/([".chr(228)."-".chr(233)."]{1}[".chr(128)."-".chr(191)."]{1}[".chr(128)."-".chr(191)."]{1}){2,}/",$word) == true)
	{
		return true;
	}
	else
	{
		return false;
	}
} // function is_utf8

function format($array)
{
    $return  = array(); // 返回的数组
    $j = 1; //文件夹层数
    // 循环控制
    while(count($array)>0){
        //遍历每一个元素
        foreach($array as $k=>$v){
            //把文件路径转换为数组
            $test_arr = explode('/',$v['filename']);
            //吧文件名称去掉
            $i = count($test_arr);
            //层数大于当前数continue

            if($i == $j){
                $tem_str = '$return';
                $b = '';
                if($v['filetype'] == 'file'){
                    //拼接字符串
                    array_pop($test_arr);
                    foreach($test_arr as $q){
                        $b .= '[\''.$q.'\']';
                    }

                    $tem_str = $tem_str.$b.'[\''.end($test_arr).'\'] = $v; return $return;';
                    eval($tem_str); //执行拼接的字符才
                }else{

                    //拼接字符串
                    if($j != 1){
                        array_pop($test_arr);
                    }
                    foreach($test_arr as $q){
                        $b .= '[\''.$q.'\']';
                        //$b .= '[]';
                    }

                    $tem_str = 'if(!isset('.$tem_str.$b.')){'.$tem_str.$b.' = array("filename"=>'.$q.');} return $return;';
                    eval($tem_str); //执行拼接的字符才
                }
                $tem_str = '';
                $b = '';
                unset($array[$k]);
            }else{
                continue;
            }

        }
        ++$j;
    }
    return $return;
}

?>
